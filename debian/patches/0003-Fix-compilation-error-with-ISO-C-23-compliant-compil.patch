From 452303d24a85dc984067528582ea02b4d03323c2 Mon Sep 17 00:00:00 2001
From: Bruno Haible <bruno@clisp.org>
Date: Thu, 9 Feb 2023 16:40:04 +0100
Subject: [PATCH 3/4] Fix compilation error with ISO C 23 compliant compilers.
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Note: The parameter list (...) was introduced in C23, for compatibility
with C++. See ISO C 23 § 6.7.6.(1) definition of parameter-type-list and
<https://www.open-std.org/jtc1/sc22/wg14/www/docs/n2975.pdf>.

* trampoline/trampoline.h (trampoline_function_t): For ISO C23, use the
same syntax as for C++.
* callback/trampoline_r/trampoline_r.h (__TR_function): Likewise.
* callback/trampoline_r/test1.c (function): Likewise.
* callback/trampoline_r/test2.c (function): Likewise.
* callback/callback.h (callback_t): Likewise.
---
 ChangeLog                            | 49 ++++++++++++++++++++++++++++
 callback/callback.h                  |  4 +--
 callback/trampoline_r/test1.c        |  4 +--
 callback/trampoline_r/test2.c        |  4 +--
 callback/trampoline_r/trampoline_r.h |  4 +--
 trampoline/trampoline.h              |  4 +--
 6 files changed, 59 insertions(+), 10 deletions(-)

diff --git a/ChangeLog b/ChangeLog
index 98f1c0c..d1821dc 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,3 +1,52 @@
+2023-02-09  Bruno Haible  <bruno@clisp.org>
+
+	Fix compilation error with ISO C 23 compliant compilers.
+	Note: The parameter list (...) was introduced in C23, for compatibility
+	with C++. See ISO C 23 § 6.7.6.(1) definition of parameter-type-list and
+	<https://www.open-std.org/jtc1/sc22/wg14/www/docs/n2975.pdf>.
+	* trampoline/trampoline.h (trampoline_function_t): For ISO C23, use the
+	same syntax as for C++.
+	* callback/trampoline_r/trampoline_r.h (__TR_function): Likewise.
+	* callback/trampoline_r/test1.c (function): Likewise.
+	* callback/trampoline_r/test2.c (function): Likewise.
+	* callback/callback.h (callback_t): Likewise.
+
+2022-07-18  Bruno Haible  <bruno@clisp.org>
+
+	Make autopull.sh more suited for continuous integration.
+	* autopull.sh: Support option --one-time.
+
+2022-07-18  Bruno Haible  <bruno@clisp.org>
+
+	Move gnulib-tool invocation back from autopull.sh to autogen.sh.
+	* autogen.sh: Revert last change regarding gnulib. Improve comments.
+	* autopull.sh: Only call 'gitsub.sh pull' and fetch libtool.
+
+2022-07-17  Bruno Haible  <bruno@clisp.org>
+
+	Split autogen.sh into autopull.sh and autogen.sh.
+	* autopull.sh: New file, based on autogen.sh.
+	* autogen.sh: Remove code that was moved to autopull.sh. Remove
+	--skip-gnulib option.
+	* Makefile.in (SOURCE_FILES): Add README-hacking, autogen.sh.
+	* README-hacking: Mention autopull.sh.
+
+2022-05-22  Bruno Haible  <bruno@clisp.org>
+
+	Add GNU Project notice.
+	* JOIN-GNU: New file. Inspired by a suggestion from José E. Marchesi
+	on the gnu-prog-discuss mailing list.
+	* README: Refer to it.
+	* Makefile.in (SOURCE_FILES): Add it.
+
+2022-05-15  Bruno Haible  <bruno@clisp.org>
+
+	Switch to libtool 2.4.7.
+	* autogen.sh (LIBTOOL_VERSION): Set to 2.4.7.
+	* libtool-patches/libtool-midnightbsd-fix.diff: Remove file.
+	* libtool-patches/README: Don't mention it.
+	* Makefile.maint (libtool-imported-files): Don't apply it.
+
 2022-05-08  Bruno Haible  <bruno@clisp.org>
 
 	loongarch: Use the now-released GCC 12.
diff --git a/callback/callback.h b/callback/callback.h
index 667b067..57dfc43 100644
--- a/callback/callback.h
+++ b/callback/callback.h
@@ -1,5 +1,5 @@
 /*
- * Copyright 1997-2017 Bruno Haible <bruno@clisp.org>
+ * Copyright 1997-2023 Bruno Haible <bruno@clisp.org>
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -32,7 +32,7 @@ extern "C" {
 /* This type denotes an opaque function pointer.
    You need to cast it to an actual function pointer type (with correct return
    type) before you can actually invoke it. */
-#ifdef __cplusplus
+#if defined __cplusplus || __STDC_VERSION__ >= 202300L
 typedef int (*callback_t) (...);
 #else
 typedef int (*callback_t) ();
diff --git a/callback/trampoline_r/test1.c b/callback/trampoline_r/test1.c
index 9105c8f..f5481af 100644
--- a/callback/trampoline_r/test1.c
+++ b/callback/trampoline_r/test1.c
@@ -1,7 +1,7 @@
 /* Trampoline test */
 
 /*
- * Copyright 1995-2022 Bruno Haible <bruno@clisp.org>
+ * Copyright 1995-2023 Bruno Haible <bruno@clisp.org>
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -33,7 +33,7 @@
 #define MAGIC3  0x7aff3cb4
 #define MAGIC4  0xa2f9d045
 
-#ifdef __cplusplus
+#if defined __cplusplus || __STDC_VERSION__ >= 202300L
 typedef int (*function)(...);
 #else
 typedef int (*function)();
diff --git a/callback/trampoline_r/test2.c b/callback/trampoline_r/test2.c
index cd4bd1f..0be9bf2 100644
--- a/callback/trampoline_r/test2.c
+++ b/callback/trampoline_r/test2.c
@@ -1,7 +1,7 @@
 /* Trampoline accessor test */
 
 /*
- * Copyright 1995-2005 Bruno Haible <bruno@clisp.org>
+ * Copyright 1995-2023 Bruno Haible <bruno@clisp.org>
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -22,7 +22,7 @@
 
 #include "trampoline_r.h"
 
-#ifdef __cplusplus
+#if defined __cplusplus || __STDC_VERSION__ >= 202300L
 typedef int (*function)(...);
 #else
 typedef int (*function)();
diff --git a/callback/trampoline_r/trampoline_r.h b/callback/trampoline_r/trampoline_r.h
index 42bb221..6cbeebe 100644
--- a/callback/trampoline_r/trampoline_r.h
+++ b/callback/trampoline_r/trampoline_r.h
@@ -1,5 +1,5 @@
 /*
- * Copyright 1995-2017 Bruno Haible <bruno@clisp.org>
+ * Copyright 1995-2023 Bruno Haible <bruno@clisp.org>
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -26,7 +26,7 @@
 #define trampoline_r_data0    callback_trampoline_data0
 #define trampoline_r_data1    callback_trampoline_data1
 
-#ifdef __cplusplus
+#if defined __cplusplus || __STDC_VERSION__ >= 202300L
 typedef int (*__TR_function) (...);
 #else
 typedef int (*__TR_function) ();
diff --git a/trampoline/trampoline.h b/trampoline/trampoline.h
index 3e93ae3..1cd1452 100644
--- a/trampoline/trampoline.h
+++ b/trampoline/trampoline.h
@@ -1,5 +1,5 @@
 /*
- * Copyright 1995-2017 Bruno Haible <bruno@clisp.org>
+ * Copyright 1995-2023 Bruno Haible <bruno@clisp.org>
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -29,7 +29,7 @@ extern "C" {
 /* This type denotes an opaque function pointer.
    You need to cast it to an actual function pointer type (with correct return
    type) before you can actually invoke it. */
-#ifdef __cplusplus
+#if defined __cplusplus || __STDC_VERSION__ >= 202300L
 typedef int (*trampoline_function_t) (...);
 #else
 typedef int (*trampoline_function_t) ();
-- 
2.46.0

